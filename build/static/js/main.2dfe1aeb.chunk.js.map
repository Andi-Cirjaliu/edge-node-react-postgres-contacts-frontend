{"version":3,"sources":["context/contactsReducer.js","context/types.js","context/contactsContext.js","context/ContactsState.js","components/ContactItem.js","components/Contacts.js","components/AddContactForm.js","components/Message.js","App.js","index.js"],"names":["state","action","newContacts","id","console","log","type","contacts","payload","loading","map","contact","filter","error","current","contactsContext","createContext","process","BACKEND_URL","window","SERVER_URL","ContactsState","props","useReducer","contactsReducer","dispatch","getContacts","a","setLoading","axios","get","res","data","response","setError","msg","message","addContact","post","headers","updateContact","put","deleteContact","delete","setTimeout","clearError","Provider","value","setCurrent","clearCurrent","children","ContactItem","name","email","useContext","ContactsContext","className","onClick","e","Contacts","useEffect","key","AddContactForm","useState","setContact","handleChange","target","onSubmit","preventDefault","onReset","htmlFor","onChange","required","Message","App","dotenv","config","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2dfe1aeb.chunk.js","sourcesContent":["import {\r\n  GET_CONTACTS,\r\n  ADD_CONTACT,\r\n  UPDATE_CONTACT,\r\n  DELETE_CONTACT,\r\n  SET_ERROR,\r\n  CLEAR_ERROR,\r\n  SET_LOADING,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n} from \"./types\";\r\n\r\nexport default (state, action) => {\r\n  let newContacts;\r\n  let id;\r\n\r\n  console.log('state: ', state, ', action: ', action);\r\n\r\n  switch (action.type) {\r\n    case GET_CONTACTS:\r\n      return { ...state, contacts: action.payload, loading: false };\r\n    case ADD_CONTACT:\r\n      newContacts = [...state.contacts, action.payload];\r\n      return { ...state, contacts: newContacts, loading: false };\r\n    case UPDATE_CONTACT:\r\n      id = action.payload.id;\r\n      newContacts = [...state.contacts].map((contact) =>\r\n        contact.id === id ? action.payload : contact\r\n      );\r\n      return { ...state, contacts: newContacts, loading: false };\r\n    case DELETE_CONTACT:\r\n      id = action.payload;\r\n      newContacts = [...state.contacts].filter((contact) => contact.id !== id);\r\n      return { ...state, contacts: newContacts, loading: false };\r\n    case SET_ERROR:\r\n      return { ...state, loading: false, error: action.payload };\r\n    case CLEAR_ERROR:\r\n      return { ...state, error: null };\r\n    case SET_LOADING:\r\n      return { ...state, loading: true };\r\n    case SET_CURRENT:\r\n      return { ...state, current: action.payload };\r\n    case CLEAR_CURRENT:\r\n      return { ...state, current: null };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const GET_CONTACTS = \"GET_CONTACTS\";\r\nexport const ADD_CONTACT = \"ADD_CONTACT\";\r\nexport const UPDATE_CONTACT = \"UPDATE_CONTACT\";\r\nexport const DELETE_CONTACT = \"DELETE_CONTACT\";\r\n\r\nexport const SET_ERROR = \"SET_ERROR\";\r\nexport const CLEAR_ERROR = \"CLEAR_ERROR\";\r\n\r\nexport const SET_LOADING = \"SET_LOADING\";\r\n\r\nexport const SET_CURRENT = \"SET_CURRENT\";\r\nexport const CLEAR_CURRENT = \"CLEAR_CURRENT\";","import {createContext} from 'react';\r\n\r\nconst contactsContext = createContext();\r\n\r\nexport default contactsContext;","import React, {useReducer} from 'react';\r\nimport axios from 'axios';\r\n\r\nimport {\r\n  GET_CONTACTS,\r\n  ADD_CONTACT,\r\n  UPDATE_CONTACT,\r\n  DELETE_CONTACT,\r\n  SET_ERROR,\r\n  CLEAR_ERROR,\r\n  SET_LOADING,\r\n  SET_CURRENT,\r\n  CLEAR_CURRENT,\r\n} from \"./types\";\r\nimport contactsReducer from './contactsReducer';\r\nimport ContactsContext from './contactsContext';\r\n\r\nlet NODE_ENV = process.env.NODE_ENV ? process.env.NODE_ENV: 'development';\r\nconsole.log('NODE_ENV: ', NODE_ENV);\r\n\r\nconst {REACT_APP_SERVER_URL} = process.env;\r\n// const {SERVER_URL} = window;\r\n// console.log('REACT_APP_SERVER_URL: ', REACT_APP_SERVER_URL);\r\n\r\nconst BACKEND_URL = NODE_ENV === 'development' ? REACT_APP_SERVER_URL : window.SERVER_URL;\r\nconsole.log('Backend URL: ', BACKEND_URL);\r\n\r\nconst ContactsState = (props) => {\r\n  const INITIAL_STATE = {\r\n    contacts: [],\r\n    current: null,\r\n    loading: false,\r\n    error: null,\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(contactsReducer, INITIAL_STATE);\r\n\r\n  //fetch contacts\r\n  const getContacts = async () => {\r\n    console.log(\"Get contacts..\");\r\n\r\n    setLoading();\r\n\r\n    try {\r\n      const res = await axios.get(`${BACKEND_URL}`);\r\n      const data = res.data;\r\n      console.log(data);\r\n\r\n      dispatch({ type: GET_CONTACTS, payload: data });\r\n    } catch (error) {\r\n      console.error(error.response);\r\n      setError(error.response ? error.response.data.msg : error.message);\r\n    }\r\n  };\r\n\r\n  //add contact\r\n  const addContact = async (contact) => {\r\n    console.log(\"Add contact \", contact);\r\n\r\n    setLoading();\r\n\r\n    try {\r\n      const res = await axios.post(`${BACKEND_URL}`, contact, {\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n      });\r\n      const data = res.data;\r\n      console.log(data);\r\n\r\n      dispatch({ type: ADD_CONTACT, payload: data });\r\n    } catch (error) {\r\n      console.error(error.response);\r\n      setError(error.response ? error.response.data.msg : error.message);\r\n    }\r\n  };\r\n\r\n  //update contact\r\n  const updateContact = async (contact) => {\r\n    console.log(\"Update contact \", contact);\r\n\r\n    setLoading();\r\n\r\n    try {\r\n      const res = await axios.put(`${BACKEND_URL}/${contact.id}`, contact, {\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n      });\r\n      const data = res.data;\r\n      console.log(data);\r\n\r\n      dispatch({ type: UPDATE_CONTACT, payload: data });\r\n    } catch (error) {\r\n      console.error(error.response);\r\n      setError(error.response ? error.response.data.msg : error.message);\r\n    }\r\n  };\r\n\r\n  //delete contact\r\n  const deleteContact = async (id) => {\r\n    console.log(\"delete contact \", id);\r\n\r\n    setLoading();\r\n\r\n    try {\r\n      const res = await axios.delete(`${BACKEND_URL}/${id}`);\r\n      const data = res.data;\r\n      console.log(data);\r\n\r\n      dispatch({ type: DELETE_CONTACT, payload: id });\r\n    } catch (error) {\r\n      console.error(error.response);\r\n      setError(error.response ? error.response.data.msg : error.message);\r\n    }\r\n  };\r\n\r\n  //set error\r\n  const setError = (message) => {\r\n    dispatch({ type: SET_ERROR, payload: message });\r\n\r\n    //clear the error after 5 seconds\r\n    setTimeout( () => clearError(), 5000);\r\n  };\r\n\r\n  //clear error\r\n  const clearError = () => {\r\n    dispatch({ type: CLEAR_ERROR });\r\n  }\r\n\r\n  //set loading\r\n  const setLoading = () => {\r\n    dispatch({ type: SET_LOADING });\r\n  };\r\n\r\n  //set current\r\n  const setCurrent = (contact) => {\r\n    dispatch({ type: SET_CURRENT, payload: contact });\r\n  };\r\n\r\n  //clear current\r\n  const clearCurrent = () => {\r\n    dispatch({ type: CLEAR_CURRENT });\r\n  };\r\n\r\n  return (\r\n    <ContactsContext.Provider\r\n      value={{\r\n        contacts: state.contacts,\r\n        current: state.current,\r\n        loading: state.loading,\r\n        error: state.error,\r\n        getContacts,\r\n        addContact,\r\n        updateContact,\r\n        deleteContact,\r\n        setCurrent,\r\n        clearCurrent,\r\n      }}\r\n    >\r\n      {props.children}\r\n    </ContactsContext.Provider>\r\n  );\r\n};\r\n\r\nexport default ContactsState;","import React,{useContext} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ContactsContext from '../context/contactsContext';\r\n\r\nconst ContactItem = ({contact}) => {\r\n    const {id, name, email} = contact;\r\n\r\n    const {setCurrent, deleteContact} = useContext(ContactsContext);\r\n\r\n    const onEdit = e => {\r\n        setCurrent(contact);\r\n    }\r\n    \r\n    const onDelete = e => {\r\n        deleteContact(id);\r\n    }\r\n\r\n    return (\r\n      <div className=\"card bg-light\">\r\n        <h3 className=\"text-primary text-left\">{name}</h3>\r\n        <ul className=\"list\">\r\n          <li>{email}</li>\r\n        </ul>\r\n        <p>\r\n          <button className=\"btn btn-dark btn-sm\" onClick={onEdit}>\r\n            Edit\r\n          </button>\r\n          <button className=\"btn btn-danger btn-sm\" onClick={onDelete}>\r\n            Delete\r\n          </button>\r\n        </p>\r\n      </div>\r\n    );\r\n}\r\n\r\nContactItem.propTypes = {\r\n    contact: PropTypes.object.isRequired\r\n}\r\n\r\nexport default ContactItem;\r\n","import React, {useContext, useEffect} from 'react';\r\nimport ContactsContext from '../context/contactsContext';\r\n\r\nimport ContactItem from './ContactItem';\r\n\r\nconst Contacts = () => {\r\n    const {contacts, getContacts} = useContext(ContactsContext);\r\n\r\n    useEffect( () => {\r\n      getContacts();\r\n      // eslint-disable-next-line\r\n    }, []);\r\n\r\n    // const contacts =[\r\n    //     {\r\n    //       \"id\": 1,\r\n    //       \"name\": \"John Doe\",\r\n    //       \"email\": \"jdoe@gmail.com\"\r\n    //     },\r\n    //     {\r\n    //       \"id\": 2,\r\n    //       \"name\": \"Philip Banks\",\r\n    //       \"email\": \"philipb@yahoo.com\"\r\n    //     },\r\n    //     {\r\n    //       \"name\": \"test2 test2\",\r\n    //       \"email\": \"test2@b.com\",\r\n    //       \"id\": 4\r\n    //     }\r\n    //   ];\r\n\r\n    return (\r\n      <div>\r\n        {contacts.map((contact) => (\r\n          <ContactItem key={contact.id} contact={contact} />\r\n        ))}\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Contacts;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\n\r\nimport ContactsContext from '../context/contactsContext';\r\n\r\nconst AddContactForm = () => {\r\n  const [contact, setContact] = useState({ name: \"\", email: \"\" });\r\n\r\n  const { addContact, updateContact, current, clearCurrent } = useContext(ContactsContext);\r\n\r\n  useEffect(() => {\r\n    if (current) {\r\n      setContact(current);\r\n    } else {\r\n      setContact({ name: \"\", email: \"\" });\r\n    }\r\n  }, [current]);\r\n\r\n  const handleChange = (e) => {\r\n    setContact({ ...contact, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    console.log(\"Submit\");\r\n\r\n    e.preventDefault();\r\n\r\n    if (current) {\r\n      updateContact(contact);\r\n      clearCurrent();\r\n    } else {\r\n      addContact(contact);\r\n      setContact({ name: \"\", email: \"\" });\r\n    }\r\n    \r\n  };\r\n\r\n  const handleClear = (e) => {\r\n    console.log(\"Clear\");\r\n\r\n    clearCurrent();\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-container\">\r\n      <h1>{ current ? 'Edit contact' : 'Add contact'}</h1>\r\n      <form onSubmit={handleSubmit} onReset={handleClear}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"name\">Name</label>\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={contact.name}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\">Email address</label>\r\n          <input\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={contact.email}\r\n            onChange={handleChange}\r\n            required\r\n          />\r\n        </div>\r\n        <input\r\n          type=\"submit\"\r\n          className=\"btn btn-primary btn-block\"\r\n          value=\"Submit\"\r\n        />\r\n        <input\r\n          type=\"reset\"\r\n          className=\"btn btn-secondary btn-block\"\r\n          value=\"Clear\"\r\n        />\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddContactForm;\r\n","import React, {useContext} from 'react';\r\n\r\nimport ContactsContext from '../context/contactsContext';\r\n\r\nconst Message = () => {\r\n    const {error} = useContext(ContactsContext);\r\n\r\n    return (\r\n      error && (\r\n        <div className={`alert alert-danger`}>\r\n          <i className=\"fas fa-info-cicle\"></i> {error}\r\n        </div>\r\n      )\r\n    );\r\n}\r\n\r\nexport default Message;\r\n","import React from 'react';\n\nimport './App.css';\n\nimport ContactsState from './context/ContactsState';\nimport Contacts from './components/Contacts';\nimport AddContactForm from './components/AddContactForm';\nimport Message from './components/Message';\n\nfunction App() {\n  return (\n    <ContactsState>\n      <Message />\n      <AddContactForm />\n      <div className=\"App\">\n        <Contacts />\n      </div>\n    </ContactsState>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport dotenv from 'dotenv';\n\ndotenv.config();\n// console.log('Env: ', process.env);\nconsole.log('Server: ', process.env.REACT_APP_SERVER_URL);\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}